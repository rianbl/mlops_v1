services:
  minio:
    image: minio/minio
    container_name: minio_container
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: mlflow
      MINIO_ROOT_PASSWORD: mlflow123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - mlops_network
    restart: unless-stopped

  minio-client:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "chmod +x /scripts/create-bucket.sh && /scripts/create-bucket.sh"
    volumes:
      - ./minio/create-bucket.sh:/scripts/create-bucket.sh
    networks:
      - mlops_network

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile-Jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mlops_network
    container_name: jenkins_container
    restart: always

  mlflow:
    build:
      context: ./mlflow
      dockerfile: Dockerfile-mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlflow_db:/mlflow/db
    networks:
      - mlops_network
    container_name: mlflow_container
    restart: unless-stopped

  model:
    build:
      context: ./model
      dockerfile: Dockerfile-model
    depends_on:
      - mlflow
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow123
    networks:
      - mlops_network
    container_name: model_container
    restart: "no"

  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile-webapp
    ports:
      - "5001:5001"
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=mlflow
      - AWS_SECRET_ACCESS_KEY=mlflow123
    networks:
      - mlops_network
    container_name: webapp_container
    restart: always

networks:
  mlops_network:
    name: mlops_network

volumes:
  jenkins_home:
  mlflow_db:
  minio_data:
